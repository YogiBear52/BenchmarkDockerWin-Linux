Perf_Random.Next_int: Job-UHUVAU(Toolchain=InProcessEmitToolchain)
Runtime = ; GC =
Mean = 14.9107 ns, StdErr = 0.0431 ns (0.29%); N = 15, StdDev = 0.1668 ns
Min = 14.6259 ns, Q1 = 14.7854 ns, Median = 14.9223 ns, Q3 = 15.0002 ns, Max = 15.2320 ns
IQR = 0.2148 ns, LowerFence = 14.4631 ns, UpperFence = 15.3225 ns
ConfidenceInterval = [14.7323 ns; 15.0891 ns] (CI 99.9%), Margin = 0.1784 ns (1.20% of Mean)
Skewness = 0.11, Kurtosis = 2.14, MValue = 2
-------------------- Histogram --------------------
[14.567 ns ; 15.291 ns) | @@@@@@@@@@@@@@@
---------------------------------------------------

Perf_Random.Next_int_int: Job-UHUVAU(Toolchain=InProcessEmitToolchain)
Runtime = ; GC =
Mean = 15.1874 ns, StdErr = 0.0518 ns (0.34%); N = 15, StdDev = 0.2004 ns
Min = 14.8970 ns, Q1 = 15.0037 ns, Median = 15.1430 ns, Q3 = 15.3138 ns, Max = 15.5904 ns
IQR = 0.3101 ns, LowerFence = 14.5385 ns, UpperFence = 15.7790 ns
ConfidenceInterval = [14.9731 ns; 15.4017 ns] (CI 99.9%), Margin = 0.2143 ns (1.41% of Mean)
Skewness = 0.42, Kurtosis = 2, MValue = 2
-------------------- Histogram --------------------
[14.877 ns ; 15.662 ns) | @@@@@@@@@@@@@@@
---------------------------------------------------

Perf_Random.NextBytes: Job-UHUVAU(Toolchain=InProcessEmitToolchain)
Runtime = ; GC =
Mean = 9.8213 us, StdErr = 0.0228 us (0.23%); N = 15, StdDev = 0.0885 us
Min = 9.7006 us, Q1 = 9.7397 us, Median = 9.8154 us, Q3 = 9.8748 us, Max = 9.9985 us
IQR = 0.1351 us, LowerFence = 9.5370 us, UpperFence = 10.0775 us
ConfidenceInterval = [9.7267 us; 9.9159 us] (CI 99.9%), Margin = 0.0946 us (0.96% of Mean)
Skewness = 0.62, Kurtosis = 2.37, MValue = 2
-------------------- Histogram --------------------
[9.669 us ; 10.030 us) | @@@@@@@@@@@@@@@
---------------------------------------------------

Perf_Random.NextDouble: Job-UHUVAU(Toolchain=InProcessEmitToolchain)
Runtime = ; GC =
Mean = 12.9146 ns, StdErr = 0.0536 ns (0.42%); N = 15, StdDev = 0.2078 ns
Min = 12.5907 ns, Q1 = 12.7434 ns, Median = 12.9088 ns, Q3 = 13.0167 ns, Max = 13.3297 ns
IQR = 0.2733 ns, LowerFence = 12.3335 ns, UpperFence = 13.4267 ns
ConfidenceInterval = [12.6925 ns; 13.1367 ns] (CI 99.9%), Margin = 0.2221 ns (1.72% of Mean)
Skewness = 0.41, Kurtosis = 2.19, MValue = 2
-------------------- Histogram --------------------
[12.517 ns ; 12.826 ns) | @@@@@
[12.826 ns ; 13.404 ns) | @@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=debian 9
Intel Xeon CPU E5-2673 v4 2.30GHz, 1 CPU, 4 logical and 2 physical cores
.NET Core SDK=2.2.301
  [Host] : .NET Core ? (CoreCLR 4.6.27817.03, CoreFX 4.6.27818.02), 64bit RyuJIT

Toolchain=InProcessEmitToolchain

|       Method |        Mean |      Error |     StdDev |
|------------- |------------:|-----------:|-----------:|
|         ctor | 2,105.83 ns | 27.1390 ns | 24.0580 ns |
|     Next_int |    14.91 ns |  0.1784 ns |  0.1668 ns |
| Next_int_int |    15.19 ns |  0.2143 ns |  0.2004 ns |
|    NextBytes | 9,821.29 ns | 94.6051 ns | 88.4937 ns |
|   NextDouble |    12.91 ns |  0.2221 ns |  0.2078 ns |

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 ns   : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:01:17 (77.53 sec), executed benchmarks: 5

Global total time: 00:01:17 (77.54 sec), executed benchmarks: 5
// * Artifacts cleanup *